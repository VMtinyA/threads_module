#ifndef SYNC_THREADS_H
#define SYNC_THREADS_H

/* Модуль предназначен для работы с синхронными потоками в программе.
 * Синхронные потоки управляются потоком - диспетчером, работающим по сигналу прерывания СИ2
 * Включает в себя:
 * 1) необходимые константы (частоты, макс. число потоков, приоритет потока - диспетчера);
 * 2) глобальные переменные (семафор для потока-диспетчера);
 * 3) функция модуля sync_threads_start() - "инкапсулирующая" функция создания главного потока,
 * должна вызываться в модуле threads_start;
 * 4) функция sync_master() является функцией главного потока
 * (опрашивающего КЛГ и обрабатывающего показания ДУС), синхронно создает дочерний поток slave_thread;
 * 5) функция потока slave_thread() - обертка для вызова функций с навигационными алгоритмами.
 *
 * Модуль является "дочерним" по отношению к abstract_thread.
 */

#include "abstract_thread.h"

//****************************************************************************************************************
/* Константы */

// Частоты синхронных потоков
#define Frequency0          1000
#define Frequency1          200

#define SYNC_THREADS_NUM               2      // макс. число используемых потоков
#define SYNC_MASTER_PRIORITY          MAX_PRIORITY_FIFO - 1
#define SYNC_SLAVE_PRIORITY             MAX_PRIORITY_FIFO - 2
// приоритет асинхронного потока выше

//****************************************************************************************
/* Глобальные переменные */

extern sem_t sem_SI2; // семафор для прерывания по СИ2 (выдает обработчик прерывания)

//****************************************************************************************
/* Прототипы функций */

/* Функции дочерних потоков */
// служат "обертками" для вызова реальных функций
extern int slave_thread (void);

// Функция главного потока (опрашивающего КЛГ и обрабатывающего показания ДУС),
// синхронно создает дочерний поток slave_thread при необходимости
extern int sync_master (void);

// функция должна создать главный из синхронных потоков
// эта функция вводится для "инкапсуляции" в данном модуле всего, что принадлежит синхронным потокам
// должна вызываться в модуле "threads_start"
extern pthread_t sync_threads_start (void);

#endif // SYNC_THREADS_H
